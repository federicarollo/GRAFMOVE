1. Get_footways_from_OSM.py --> mi restituisce tutte le footways in footways_from_OSM
python Get_footways_from_OSM.py --neo4jURL neo4j://localhost:7687 --neo4juser neo4j  --neo4jpwd modenafootway --latitude 44.645885 --longitude 10.9255707 --distance 5000

2. Get_footways_near_parks.py --> mi restituisce tutte le footways nei parchi in footways_near_parks
python Get_footways_near_parks.py --neo4jURL neo4j://localhost:7687 --neo4juser neo4j  --neo4jpwd modenafootway --latitude 44.645885 --longitude 10.9255707 --distance 5000

3. elaboration_footways.py su entrambi i file per avere anche le touched_footways e le closest_footways
python elaboration_footways.py --neo4jURL neo4j://localhost:7687 --neo4juser neo4j  --neo4jpwd modenafootway --nameFile footways_near_parks.json

4. find_missing_footways.py per trovare le footways mancanti nel db --> missing_footways.json
python find_missing_footways.py --neo4jURL neo4j://localhost:7687 --neo4juser neo4j  --neo4jpwd modenafootway --nameFile1 footways_from_OSM.json --nameFile2 footways_near_parks.json

5. generation_footways.py generate le missing_footways nel DB + inserite info mancanti per tutte le altre footways(NO INSERT INTO SPATIAL LAYER E NO INSERT INDEX)
python generation_footways.py --neo4jURL neo4j://localhost:7687 --neo4juser neo4j  --neo4jpwd modenafootway --nameFile missing_footways.json --nameFile2 footways_from_OSM.json --nameFile3 footways_near_parks.json

6. find_missing_footnodes.py per trovare i footnodes delle footways mancanti che non sono presenti nel db -->  missing_footnodes.json
python find_missing_footnodes.py --neo4jURL neo4j://localhost:7687 --neo4juser neo4j  --neo4jpwd modenafootway

7. generation_footnodes.py generati i missing_footnodes nel DB  (NO INSERT INTO SPATIAL LAYER E NO INSERT INDEX)
python generation_footnodes.py --neo4jURL neo4j://localhost:7687 --neo4juser neo4j  --neo4jpwd modenafootway --nameFile missing_footnodes.json

8. find_footnodes_in_parks.py aggiunto attributo green_area = 'yes' ai footnode interni ai parchi 
python find_footnodes_in_parks.py --neo4jURL neo4j://localhost:7687 --neo4juser neo4j  --neo4jpwd modenafootway --latitude 44.645885 --longitude 10.9255707 --distance 5000

9. generation_relationships.py generate relazioni CONTAINS e FOOT_ROUTE 
python generation_relationships.py  --neo4jURL neo4j://localhost:7687 --neo4juser neo4j  --neo4jpwd modenafootway --nameFile missing_footways.json

10. set_weights.py assegnazione costi e attributo green_area alle footways 
MATCH(n)-[r:FOOT_ROUTE]->(n1) set r.distance = point.distance(n.location, n1.location)

10. amenity.py aggiunge le amenity al grafo e le collega al FootNode pi√π vicino
python amenity.py --neo4jURL neo4j://localhost:7687 --neo4juser neo4j  --neo4jpwd modenafootway --latitude 44.645885 --longitude 10.9255707 --distance 5000 --spatial False

query per selezionare i punti di interesse:
MATCH (n:PointOfInterest)-[:TAGS]-(t:Tag) where n.name is not null and (t.tourism='attraction' or t.amenity='place_of_worship') RETURN distinct n.osm_id, n.name order by n.name


MATCH (f:FootNode)<-[r:NEAR]-(:OSMWayNode)<-[:MEMBER]-(n:PointOfInterest)-[:TAGS]-(t:Tag) where n.name is not null and f.component=1282
with n.name as poi_name, f.id as footnode, r.distance as distance, f.component as component
with poi_name, collect(footnode) as footnodes, collect(distance) as distances, component as c
with poi_name, footnodes, distances, c, apoc.coll.indexOf(distances,min(distances)) as min_index 
RETURN poi_name, c, footnodes[min_index], distances[min_index]
order by c

SENZA COMPONENT:
MATCH (f:FootNode)<-[r:NEAR]-(:OSMWayNode)<-[:MEMBER]-(n:PointOfInterest)-[:TAGS]-(t:Tag) where n.name is not null and (t.tourism='attraction' or t.amenity='place_of_worship')
with n.name as poi_name, collect(f.id) as footnodes, collect(r.distance) as distances
with poi_name, footnodes, distances, apoc.coll.indexOf(distances,min(distances)) as min_index 
RETURN poi_name, footnodes[min_index], distances[min_index]


11. tsp.py
python tsp.py --neo4jURL neo4j://localhost:7687 --neo4juser neo4j  --neo4jpwd modenafootway --mapName test_tsp


